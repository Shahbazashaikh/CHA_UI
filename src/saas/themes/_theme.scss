@use '@angular/material' as mat;

$app-typography: mat.define-typography-config(
      $font-family:   'Roboto',
      $display-4:     mat.define-typography-level(112px, 112px, 300),
      $display-3:     mat.define-typography-level(56px, 56px, 400),
      $display-2:     mat.define-typography-level(45px, 48px, 400),
      $display-1:     mat.define-typography-level(34px, 40px, 400),
      $headline:      mat.define-typography-level(24px, 32px, 400),
      $title:         mat.define-typography-level(20px, 32px, 500),
      $subheading-2:  mat.define-typography-level(16px, 28px, 400),
      $subheading-1:  mat.define-typography-level(15px, 24px, 400),
      $body-2:        mat.define-typography-level(14px, 24px, 500),
      $body-1:        mat.define-typography-level(14px, 20px, 400),
      $caption:       mat.define-typography-level(12px, 20px, 400),
      $button:        mat.define-typography-level(14px, 14px, 500),
      $input:         mat.define-typography-level(11px, 1.25, 400)
    );

@include mat.core($app-typography);

$my-primary: mat.define-palette(mat.$indigo-palette, 500);
$my-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

$my-theme: mat.define-light-theme((
 color: (
   primary: $my-primary,
   accent: $my-accent
 )
));

// Emit theme-dependent styles for common features used across multiple components.
@include mat.core-theme($my-theme);

// Emit styles for MatButton based on `$my-theme`. Because the configuration
// passed to `define-light-theme` omits typography, `button-theme` will not
// emit any typography styles.
@include mat.button-theme($my-theme);